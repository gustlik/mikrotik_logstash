## field called "rule" is for custom name of firewall rule
input {
  udp {
   port => ...
  }
 }
 filter {
   grok {
   tag_on_failure => "_grokparsefailure_mikrotik_log"
    match => [
      "message", "%{WORD:topic1},%{WORD:topic2}%{SPACE}?%{DATA:rule}? %{DATA:chain}: in:%{DATA:in_interface} out:%{DATA:out_interface}, src-mac %{MAC:[src][mac]}, proto %{WORD:protocol} \(%{DATA:tcp_flag}\), %{IP:[src][ip]}:%{INT:[src][port]}->%{IP:[dst][ip]}:%{INT:[dst][port]}, len %{INT:length}%{GREEDYDATA}",
       "message", "%{WORD:topic1},%{WORD:topic2}%{SPACE}?%{DATA:rule}? %{DATA:chain}: in:%{DATA:in_interface} out:%{DATA:out_interface}, src-mac %{MAC:[src][mac]}, proto %{WORD:protocol}, %{IP:[src][ip]}:%{INT:[src][port]}->%{IP:[dst][ip]}:%{INT:[dst][port]}, len %{INT:length}%{GREEDYDATA}",
       "message", "%{WORD:topic1},%{WORD:topic2}%{SPACE}?%{DATA:rule}? %{DATA:chain}: in:%{DATA:in_interface} out:%{DATA:out_interface}, proto %{WORD:protocol} \(%{DATA:tcp_flag}\), %{IP:[src][ip]}:%{INT:[src][port]}->%{IP:[dst][ip]}:%{INT:[dst][port]}, len %{INT:length}%{GREEDYDATA}",
       "message", "%{WORD:topic1},%{WORD:topic2}%{SPACE}?%{DATA:rule}? %{DATA:chain}: in:%{DATA:in_interface} out:%{DATA:out_interface}, src-mac %{MAC:[src][mac]}, proto %{WORD:protocol} \(type %{INT:type}, code %{INT:code}\), %{IP:[src][ip]}->%{IP:[dst][ip]}, len %{INT:length}%{GREEDYDATA}",
       "message", "%{WORD:topic1},%{WORD:topic2} %{DATA:action} by %{DATA:user}$",
       "message", "%{WORD:topic1},%{WORD:topic2} %{DATA:interface} link %{DATA:link_state} \(speed %{DATA:speed}\)",
       "message", "%{WORD:topic1},%{WORD:topic2} %{DATA:interface} link %{DATA:link_state}$",
       "message", "%{WORD:topic1},%{WORD:topic2} %{DATA:interface}: %{MAC:[wlan][mac]} %{DATA:[wlan][action]}$",
       "message", "%{WORD:topic1},%{WORD:topic2} %{DATA:interface}: %{MAC:[wlan][mac]} %{DATA:[wlan][ACL]}, %{WORD:[wlan][action]}$",
       "message", "%{WORD:topic1},%{WORD:topic2} %{MAC:[wlan][mac]}@%{DATA:interface}: %{WORD:[wlan][status]}, signal strength %{NUMBER:[wlan][signal]}$",
       "message", "%{WORD:topic1},%{WORD:topic2} %{MAC:[wlan][mac]}@%{DATA:interface}: %{WORD:[wlan][status]}, %{DATA:[wlan][info]}: %{DATA:[wlan][info2]} \(%{GREEDYDATA}",
       "message", "%{WORD:topic1},%{WORD:topic2} %{MAC:[wlan][mac]}@%{DATA:interface}: %{WORD:[wlan][status]}",
       "message", "%{WORD:topic1},%{WORD:topic2},%{WORD:topic3} user %{DATA:user} %{DATA:[login][status]} from %{IP:[login][ip]} via %{DATA:[login][method]}$",
       "message", "%{WORD:topic1},%{WORD:topic2},%{WORD:topic3} %{DATA:[login][status]} for user %{DATA:user} from %{IP:[login][ip]} via %{WORD:[login][method]}",
       "message", "%{WORD:topic1},%{WORD:topic2},%{WORD:topic3} <%{DATA:user}>: %{WORD:[login][status]}",
       "message", "%{WORD:topic1},%{WORD:topic2} %{MAC:[wlan][mac]}@%{DATA:interface}: %{WORD:[wlan][status]}, %{DATA:[wlan][info]}$",
       "message", "%{WORD:topic1},%{WORD:topic2} %{WORD:[dhcp][server]} %{WORD:[dhcp][status]} %{IP:[dhcp][ip]} to %{MAC:[dhcp][mac]}",
       "message", "%{WORD:topic1},%{WORD:topic2} %{WORD:[dhcp][server]} %{WORD:[dhcp][status]} %{IP:[dhcp][ip]} from %{MAC:[dhcp][mac]}",
       "message", "%{WORD:topic1},%{WORD:topic2} %{DATA:blacklist} list",
       "message", "%{WORD:topic1},%{WORD:topic2} %{DATA:blacklist} by %{WORD:user}",
       "message", "%{WORD:topic1},%{WORD:topic2} %{DATA:blacklist} from mt",
       "message", "%{WORD:topic1} fetch: %{DATA:blacklist}$",
       "message", "%{WORD:topic1},%{WORD:topic2} %{GREEDYDATA:msg}"

    ]
   }
   if [topic1] =~ /wireless/ {
     mutate {
     add_tag => [ "wireless" ]
     }
   }
  if [wlan][mac] {
    translate {
        field => "[wlan][mac]"
        destination => "[wlan][mac_name]"
        dictionary => {
           "00:00:00:00:00:01" => "Position 1"
           "00:00:00:00:00:02" => "Position 2"
       }
       fallback => "[wlan][mac]"
   }
 }
 }
 output {
   elasticsearch {
   ...
  
   }
  }
